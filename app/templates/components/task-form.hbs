<div class="c-item__line">
  <div
    class="c-checkbox js-checkbox {{if @task.isCompleted 'is-checked'}}"
    {{action (toggle "isCompleted" @task)}}
  >
    {{#if @task.isCompleted}}
      {{svg-jar "checkbox-mark" class="c-checkbox__icon" }}
    {{/if}}
  </div>

  {{text-input
    class="c-item__input js-item-input"
    placeholder=@placeholder
    value=@task.name
    update=(action (mut @task.name))
    enter=@stopEditing
    escape-press=@stopEditing
    data-test-task-name-input=true
  }}
</div>

<div class="c-item-form">
  <div class="c-item-form__section c-item-form__section--notes">
    <label class="c-item-form__notes-label" for="notes">
      {{svg-jar "note"}}
    </label>

    {{text-area
      class="c-item-form__notes"
      id="notes"
      autoresize=true
      max-rows=10
      placeholder="Notes"
      value=@task.notes
      update=(action (mut @task.notes))
      escape-press=@stopEditing
    }}
  </div>


  <div class="c-item-form__section">
    <div class="c-item-form__label" {{action (toggle "isWhenDialogOpen" this)}}>
      When:
    </div>

    <div class="c-item-form__value" {{action (toggle "isWhenDialogOpen" this)}}>
      {{#if (not-eq @task.list "inbox")}}
        <div class="c-item-form__value-box">
          {{svg-jar @task.list class=(concat "c-item-form__value-icon c-item-form__value-icon--" @task.list)}}

          <div class="c-item-form__value-text u-capitalize">
            {{@task.list}}
          </div>
        </div>
      {{else}}
        <div class="c-item-form__placeholder">
          Set when
        </div>
      {{/if}}
    </div>
  </div>

  <div class="c-item-form__section">
    <div class="c-item-form__label" {{action (toggle "isMoveDialogOpen" this)}}>
      List:
    </div>

    <div class="c-item-form__value" {{action (toggle "isMoveDialogOpen" this)}}>
      {{#if @task.project}}
        <div class="c-item-form__value-box">
          {{progress-pie
            class="c-item-form__value-icon"
            progress=@task.project.progress
          }}

          <div class="c-item-form__value-text">
            {{or @task.project.name "New project"}}
          </div>

          <div class="c-item-form__value-reset" {{action "moveToProject" null bubbles=false}}>
            {{svg-jar "no"}}
          </div>
        </div>
      {{else}}
        <div class="c-item-form__placeholder">
          {{if (eq @task.list "inbox") "Inbox" "No project"}}
        </div>
      {{/if}}
    </div>
  </div>

  <div class="c-item-form__section">
    <div class="c-item-form__label" {{action (toggle "isDeadlineDialogOpen" this)}}>
      Deadline:
    </div>

    <div class="c-item-form__value" {{action (toggle "isDeadlineDialogOpen" this)}}>
      {{#if @task.deadline}}
        <div class="c-item-form__value-box">
          <div class="c-item-form__value-text">
            {{moment-format @task.deadline 'MMM DD'}}
          </div>

          <div class="c-item-form__value-reset" {{action (mut @task.deadline) null bubbles=false}}>
            {{svg-jar "no"}}
          </div>
        </div>
      {{else}}
        <div class="c-item-form__placeholder">
          Add deadline
        </div>
      {{/if}}
    </div>
  </div>
</div>

{{#if this.isDeadlineDialogOpen}}
  {{to-elsewhere named="modal" send=(
    component "deadline-dialog"
    value=@task.deadline
    setDeadline=(action (mut @task.deadline))
    close=(toggle-action "isDeadlineDialogOpen" this)
  )}}
{{/if}}

{{#if this.isWhenDialogOpen}}
  {{to-elsewhere named="modal" send=(
    component "when-dialog"
    setWhen=(action "moveToList")
    close=(toggle-action "isWhenDialogOpen" this)
  )}}
{{/if}}

{{#if this.isMoveDialogOpen}}
  {{to-elsewhere named="modal" send=(
    component "move-dialog"
    moveToInbox=(action "moveToList" "inbox")
    moveToProject=(action "moveToProject")
    close=(toggle-action "isMoveDialogOpen" this)
  )}}
{{/if}}

{{to-elsewhere named="actions-bar" send=(
  component "actions-bar"
  isDeleted=this.task.isDeleted
  openMoveDialog=(toggle-action "isMoveDialogOpen" this)
  openWhenDialog=(toggle-action "isWhenDialogOpen" this)
  openDeadlineDialog=(toggle-action "isDeadlineDialogOpen" this)
  delete=(action "toggleIsDeleted")
  undelete=(action "toggleIsDeleted")
)}}
