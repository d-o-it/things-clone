{{#sortable-group onChange=(route-action "reorderItems") as |group|}}
  {{#animated-container}}
    {{#animated-each @items use=eachTransition duration=200 as |item|}}
      {{#sortable-item
        class=(if (is-selected item) 'is-selected')
        model=item
        group=group
        distance=2
        handle=(if (eq @isSortable false) ".does-not-exist" ".is-sortable")
      }}
        {{#if item.isProject}}
          {{items-project
            item=item
            markItemsAs=(route-action "markItemsAs")
            selectBetween=@selectBetween
          }}
        {{else}}
          {{items-task
            task=item
            setItemName=(route-action "setItemName")
            setItemNotes=(route-action "setItemNotes")
            setItemsDeadline=(route-action "setItemsDeadline")
            seTaskSubtasks=(route-action "seTaskSubtasks")
            markItemsAs=(route-action "markItemsAs")
            deleteItems=(route-action "deleteItems")
            undeleteItems=(route-action "undeleteItems")
            setItemsWhen=(route-action "setItemsWhen")
            moveTasksToInbox=(route-action "moveTasksToInbox")
            moveTasksToProject=(route-action "moveTasksToProject")
            selectBetween=@selectBetween
          }}
        {{/if}}
      {{/sortable-item}}
    {{/animated-each}}
  {{/animated-container}}
{{/sortable-group}}
